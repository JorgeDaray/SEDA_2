{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Courier New;}}
{\colortbl\red0\green0\blue0;\red255\green255\blue255;\red200\green200\blue200;\red0\green0\blue0;\red152\green152\blue217;\red192\green192\blue192;\red128\green128\blue255;\red170\green170\blue240;\red0\green128\blue128;\red107\green153\blue153;\red128\green0\blue0;\red172\green89\blue89;\red240\green0\blue240;\red240\green200\blue240;\red0\green0\blue160;\red135\green135\blue200;\red0\green160\blue0;\red154\green200\blue154;\red190\green0\blue190;\red190\green137\blue190;\red0\green0\blue255;\red190\green190\blue255;\red224\green160\blue0;\red224\green206\blue159;\red132\green160\blue132;\red255\green0\blue0;\red255\green200\blue200;\red64\green64\blue128;\red133\green133\blue172;\red128\green255\blue255;\red55\green55\blue55;}
{\info{\comment Generated by the Code::Blocks RTF Exporter plugin}
{\title Untitled}}

\deflang1033\pard\plain\f0\fs20 \cb3\cf4 //arch securo.cpp - creaci√≥n de un archivo secuencial
\par 
\par \cb3\cf16 #include <iostream>
\par #include <fstream>
\par #include <cstdlib>\cb3\cf4 //exit
\par \cb3\cf16 #include <iomanip>
\par 
\par \cb3\cf14\b using namespace \b0\cb3\cf16\b std\b0\cb3\cf25 ;
\par 
\par \cb3\cf14\b void \b0\cb1\cf0 ingresar\cb3\cf25 () \{
\par 
\par \cb3\cf4 // tres campos que conforman un registro
\par 
\par \cb3\cf14\b char \b0\cb1\cf0 nombre \cb3\cf25 [\cb3\cf12 30\cb3\cf25 ];
\par 
\par \cb3\cf14\b int \b0\cb1\cf0 edad\cb3\cf25 ;
\par 
\par \cb3\cf14\b char \b0\cb1\cf0 deporte \cb3\cf25 [\cb3\cf12 20\cb3\cf25 ];
\par 
\par \cb3\cf16\b ofstream \b0\cb1\cf0 archivoDeportistasSalida\cb3\cf25 ; \cb3\cf4 //archivo logico
\par 
\par \cb1\cf0 archivoDeportistasSalida\cb3\cf25 .\cb1\cf0 open \cb3\cf25 (\cb3\cf20 "deportistas.txt"\cb3\cf25 , \cb1\cf0 ios\cb3\cf25 :: \cb1\cf0 out\cb3\cf25 );
\par 
\par \cb3\cf4 //salir del programa si no se puede crear el antivo
\par  \cb3\cf14\b if \b0\cb3\cf25 ( ! \cb1\cf0 archivoDeportistasSalida \cb3\cf25 )
\par  \{ \cb3\cf4 // operador I sobrecargado
\par      \cb3\cf16\b cerr\b0\cb3\cf25 << \cb3\cf20 "No se pudo abrir el archivo " \cb3\cf25 << \cb3\cf16\b endl\b0\cb3\cf25 ;
\par      \cb1\cf0 exit \cb3\cf25 (\cb3\cf12 1\cb3\cf25 );
\par \}
\par 
\par \cb3\cf16\b cout \b0\cb3\cf25 << \cb3\cf20 "Escriba el nombre, la edad y el deporte."\cb3\cf25 <<\cb3\cf16\b endl
\par \b0\cb3\cf25 <<\cb3\cf20 "Escriba fin de archivo para terminar la entrada.\\n?"\cb3\cf25 ;
\par 
\par \cb3\cf4 //leer nombre, edad y deporte de cin, despues colocarla en el archivo
\par  \cb3\cf14\b while \b0\cb3\cf25 (\cb3\cf16\b cin\b0\cb3\cf25 >> \cb1\cf0 nombre \cb3\cf25 >> \cb1\cf0 edad \cb3\cf25 >> \cb1\cf0 deporte\cb3\cf25 )
\par   \{
\par        \cb1\cf0 archivoDeportistasSalida \cb3\cf25 << \cb1\cf0 nombre \cb3\cf25 <<\cb3\cf22 ' '\cb3\cf25 << \cb1\cf0 edad         \cb3\cf25 <<\cb3\cf22 ' '\cb3\cf25 << \cb1\cf0 deporte \cb3\cf25 <<\cb3\cf16\b endl\b0\cb3\cf25 ;
\par        \cb3\cf16\b cout \b0\cb3\cf25 << \cb3\cf20 "? "\cb3\cf25 ;
\par 
\par   \}\cb3\cf4 //Fin while
\par 
\par \cb1\cf0 archivoDeportistasSalida\cb3\cf25 .\cb1\cf0 close\cb3\cf25 ();
\par \}\cb3\cf4 //Final funcion ingresar
\par 
\par \cb3\cf14\b void \b0\cb1\cf0 mostrarLinea \cb3\cf25 (\cb3\cf14\b const char\b0\cb3\cf25 *\cb3\cf14\b const\b0\cb3\cf25 , \cb3\cf14\b int\b0\cb3\cf25 , \cb3\cf14\b const char \b0\cb3\cf25 * \cb3\cf14\b const\b0\cb3\cf25 );
\par \cb3\cf14\b void \b0\cb1\cf0 recuperar\cb3\cf25 () \{
\par 
\par \cb3\cf4 // tres campos que conforman un registro
\par 
\par \cb3\cf14\b char \b0\cb1\cf0 nombre \cb3\cf25 [\cb3\cf12 30\cb3\cf25 ];
\par 
\par \cb3\cf14\b int \b0\cb1\cf0 edad\cb3\cf25 ;
\par 
\par \cb3\cf14\b char \b0\cb1\cf0 deporte \cb3\cf25 [\cb3\cf12 20\cb3\cf25 ];
\par 
\par \cb3\cf16\b ifstream \b0\cb1\cf0 archivoDeportistasEntrada\cb3\cf25 ; \cb3\cf4 //archivo logico
\par \cb1\cf0 archivoDeportistasEntrada\cb3\cf25 .\cb1\cf0 open \cb3\cf25 (\cb3\cf20 "deportistas.txt"\cb3\cf25 , \cb1\cf0 ios\cb3\cf25 :: \cb1\cf0 in\cb3\cf25 );
\par 
\par \cb3\cf4 //salir del programa si no se puede crear el antivo
\par  \cb3\cf14\b if \b0\cb3\cf25 ( ! \cb1\cf0 archivoDeportistasEntrada \cb3\cf25 )
\par  \{ \cb3\cf4 // operador I sobrecargado
\par      \cb3\cf16\b cerr\b0\cb3\cf25 << \cb3\cf20 "No se pudo abrir el archivo " \cb3\cf25 << \cb3\cf16\b endl\b0\cb3\cf25 ;
\par      \cb1\cf0 exit \cb3\cf25 (\cb3\cf12 1\cb3\cf25 );
\par \}
\par 
\par \cb3\cf4 // Imprimir cabecera de la tabla
\par \cb3\cf16\b cout \b0\cb3\cf25 << \cb1\cf0 left \cb3\cf25 << \cb3\cf16\b setw\b0\cb3\cf25 (\cb3\cf12 10\cb3\cf25 ) << \cb3\cf20 "Nombre" \cb3\cf25 << \cb3\cf16\b setw\b0\cb3\cf25 (\cb3\cf12 13\cb3\cf25 )
\par << \cb3\cf20 "Edad" \cb3\cf25 << \cb3\cf20 "Deporte" \cb3\cf25 << \cb3\cf16\b endl \b0\cb3\cf25 << \cb1\cf0 fixed \cb3\cf25 << \cb1\cf0 showpoint\cb3\cf25 ;
\par 
\par \cb3\cf4 // mostrar cada registro del archivo
\par  \cb3\cf14\b while \b0\cb3\cf25 (\cb1\cf0 archivoDeportistasEntrada\cb3\cf25 >> \cb1\cf0 nombre \cb3\cf25 >> \cb1\cf0 edad \cb3\cf25 >> \cb1\cf0 deporte\cb3\cf25 )
\par     \{
\par         \cb1\cf0 mostrarLinea\cb3\cf25 (\cb1\cf0 nombre\cb3\cf25 ,\cb1\cf0 edad\cb3\cf25 ,\cb1\cf0 deporte\cb3\cf25 );
\par     \}
\par 
\par        \cb1\cf0 archivoDeportistasEntrada\cb3\cf25 .\cb1\cf0 close\cb3\cf25 ();
\par \}\cb3\cf4 //Final funcion recuperar
\par 
\par //mostrar cada registro
\par \cb3\cf14\b void \b0\cb1\cf0 mostrarLinea\cb3\cf25 (\cb3\cf14\b const char\b0\cb3\cf25 * \cb3\cf14\b const \b0\cb1\cf0 nombre\cb3\cf25 , \cb3\cf14\b int \b0\cb1\cf0 edad\cb3\cf25 , \cb3\cf14\b const char\b0\cb3\cf25 * \cb3\cf14\b const \b0\cb1\cf0 deporte\cb3\cf25 )
\par \{
\par     \cb3\cf16\b cout\b0\cb3\cf25 <<\cb1\cf0 left\cb3\cf25 <<\cb3\cf16\b setw\b0\cb3\cf25 (\cb3\cf12 10\cb3\cf25 )<<\cb1\cf0 nombre\cb3\cf25 <<\cb3\cf16\b setw\b0\cb3\cf25 (\cb3\cf12 13\cb3\cf25 )<<\cb1\cf0 edad
\par     \cb3\cf25 <<\cb3\cf16\b setw\b0\cb3\cf25 (\cb3\cf12 7\cb3\cf25 )<<\cb1\cf0 deporte\cb3\cf25 <<\cb3\cf16\b endl\b0\cb3\cf25 ;
\par 
\par \}\cb3\cf4 //Final mostrar registro
\par 
\par 
\par \cb3\cf14\b void \b0\cb1\cf0 menu\cb3\cf25 ()
\par \{
\par     \cb3\cf14\b int \b0\cb1\cf0 opc\cb3\cf25 ;
\par     \cb3\cf14\b do\b0\cb3\cf25 \{
\par     \cb3\cf16\b cout \b0\cb3\cf25 << \cb3\cf20 "0.-Salir\\n1.-Ingresar Deportistas\\n2.-Recuperar Deportistas\\n"\cb3\cf25 <<\cb3\cf16\b endl\b0\cb3\cf25 ;
\par     \cb3\cf16\b cout \b0\cb3\cf25 << \cb3\cf20 "\\tINTRODUCE una opcion:\\n"\cb3\cf25 <<\cb3\cf16\b endl\b0\cb3\cf25 ;
\par     \cb3\cf16\b cin \b0\cb3\cf25 >> \cb1\cf0 opc\cb3\cf25 ;
\par 
\par     \cb3\cf14\b switch\b0\cb3\cf25 (\cb1\cf0 opc\cb3\cf25 )\{
\par         \cb3\cf14\b case \b0\cb3\cf12 0\cb3\cf25 : \cb1\cf0 printf\cb3\cf25 (\cb3\cf20 "\\tAdios"\cb3\cf25 );
\par                 \cb1\cf0 system\cb3\cf25 (\cb3\cf20 "pause"\cb3\cf25 );
\par                 \cb3\cf14\b break\b0\cb3\cf25 ;
\par         \cb3\cf14\b case \b0\cb3\cf12 1\cb3\cf25 : \cb1\cf0 printf\cb3\cf25 (\cb3\cf20 "\\tIngresar Deportistas\\n\\n"\cb3\cf25 );
\par                 \cb1\cf0 ingresar\cb3\cf25 ();
\par                 \cb3\cf16\b cin\b0\cb3\cf25 .\cb3\cf16\b clear\b0\cb3\cf25 ();
\par                 \cb3\cf14\b break\b0\cb3\cf25 ;
\par         \cb3\cf14\b case \b0\cb3\cf12 2\cb3\cf25 : \cb1\cf0 printf\cb3\cf25 (\cb3\cf20 "\\tRecuperar Deportistas\\n\\n"\cb3\cf25 );
\par                 \cb1\cf0 recuperar\cb3\cf25 ();
\par                 \cb1\cf0 system\cb3\cf25 (\cb3\cf20 "pause"\cb3\cf25 );
\par                 \cb3\cf14\b break\b0\cb3\cf25 ;
\par 
\par         \cb3\cf14\b default\b0\cb3\cf25 : \cb1\cf0 printf\cb3\cf25 (\cb3\cf20 "\\tChoose a correct value"\cb3\cf25 );
\par                 \cb3\cf14\b break\b0\cb3\cf25 ;
\par     \}\cb3\cf4 //Final switch
\par     \cb1\cf0 system\cb3\cf25 (\cb3\cf20 "cls"\cb3\cf25 );
\par     \}\cb3\cf14\b while\b0\cb3\cf25 (\cb1\cf0 opc\cb3\cf25 !=\cb3\cf12 0\cb3\cf25 );
\par 
\par \}\cb3\cf4 //Final funcion menu
\par 
\par \cb3\cf14\b int \b0\cb1\cf0 main\cb3\cf25 ()
\par \{
\par     \cb1\cf0 menu\cb3\cf25 ();
\par     \cb3\cf14\b return \b0\cb3\cf12 0\cb3\cf25 ;
\par \}\cb3\cf4 //Final main
\par }